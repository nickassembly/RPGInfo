@using RPGInfo.Web.Models
@model List<Note>

<div class="container">

    @for (int i = 0; i < Model.Count; i++)
    {
        <div id="noteToEdit" class="col-md-12">
            <h1 id="noteTitle">@Model[i].NoteTitle</h1>
            <p id="noteContent">
                @Model[i].NoteContent
            </p>
            <div>
                <span class="badge"> Added: @Model[i].NoteDate</span>
                <div>
                    <button type="button" id="@Model[i].Id" class="btn btn-primary editButton">Edit Note</button>
                </div>
            </div>

            <hr>
        </div>
    }

   @* @foreach (var note in Model)
    {
        <div id="noteToEdit" class="col-md-12">
            <h1 id="noteTitle">@note.NoteTitle</h1>
            <p id="noteContent">
                @note.NoteContent
            </p>
            <div>
                <span class="badge"> Added: @note.NoteDate</span>
                <div>
                    <button type="button" id="@note.Id" class="btn btn-primary editButton">Edit Note</button>
                </div>
            </div>

            <hr>
        </div>
    }
*@
    <div class="bs-example">
        <!-- Modal HTML -->
        <div id="noteModal" class="modal fade" tabindex="-1">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Edit Note</h5>
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                    </div>
                    <div class="modal-body">
                        <div class="row">
                            <div class="form-group col-6">
                                <label for="NoteTitle">Title</label>
                                <input type="text" id="noteTitle" name="NoteTitle" value="" class="form-control">
                            </div>

                            <div class="form-group  col-6">
                                <label for="NoteDate">Date</label>
                                <input type="datetime" id="noteDate" onchange="validateDate()" value="" name="NoteDate" class="form-control">
                            </div>
                        </div>

                        <div class="form-group">
                            <label for="NoteContent">Content</label>
                            <input type="text" id="noteContent" name="NoteContent" value="" class="form-control">
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                        @Html.AntiForgeryToken()
                        <button type="button" id="saveNote" class="btn btn-primary">Save</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .bs-example {
        margin: 20px;
    }
</style>

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>

<script type="text/javascript">

    $('.editButton').click(function() {
     notes = @Html.Raw(Json.Serialize(Model));

     const noteId = this.id;
     var selectedNote = notes.filter(function(el) {
         return el.id == noteId
     });

     console.log(selectedNote);

     $('input[id="noteTitle"]').val(selectedNote[0].noteTitle);
     $('input[id="noteDate"]').val(selectedNote[0].noteDate);
     $('input[id="noteContent"]').val(selectedNote[0].noteContent);
     $('#noteModal').modal('show');

     $('#saveNote').click(function() {
       editSelectedNote();
     });

    });


    function editSelectedNote() {
        var noteToEdit = {};
        noteToEdit.noteTitle = $('input[id="noteTitle"]').val();
        noteToEdit.noteDate = $('input[id="noteDate"]').val();
        noteToEdit.noteContent = $('input[id="noteContent"]').val();

        //console.log("Edited Title: " + noteToEdit.noteTitle);
        //console.log("Edited Date: " + noteToEdit.noteDate);
        //console.log("Edited Content: " + noteToEdit.noteContent);

        $.ajax({
              contentType: 'application/json; charset=utf-8',
              dataType: 'json',
              type: 'POST',
              url: window.location.href + '?handler=EditNote',
              //data: JSON.stringify(noteToEdit),
              data: 'test test',
              success: function() {
                  window.location.href="url";
                  console.log("ajax Notes post called");
              },
              failure: function(response) {
                  console.log(response);
              },
              beforeSend: function (xhr) {
                            xhr.setRequestHeader("XSRF-TOKEN",
                            $('input:hidden[name="__RequestVerificationToken"]').val());
                           }
          });
    }


       function validateDate() {
              var dateInput = $('input[id="noteDate"]').val();

              var match = dateInput.match(/^(\d{1,2})\/(\d{1,2})\/(\d{4})$/);

              if (!match) {
                $('input[id="noteDate"]').val('');
              } else {
                $('input[id="noteDate"]').val(dateInput);
              }
      }


</script>