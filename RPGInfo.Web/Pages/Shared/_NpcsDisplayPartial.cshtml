@using RPGInfo.Web.Models
@model List<RelatedNpc>

 @for (int i = 0; i < Model.Count; i++)
 {
    <div id="npcToEdit" class="col-md-12">
        <h1 id="npcName">@Model[i].Name</h1>
        <h1 id="npcRace">@Model[i].Race</h1>
        <h3 id="npcClass">@Model[i].Class</h3>
        <p id="npcBackground">@Model[i].Background</p>
        <p id="npcRelationship">@Model[i].Relationship</p>
            <div>
                <button type="button" id="@Model[i].Id" class="btn btn-primary editButton">Edit Npc</button>
            </div>
        <hr>
    </div>
 }

    <div class="bs-example">
        <!-- Modal HTML -->
        <div id="npcModal" class="modal fade" tabindex="-1">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Edit Npc</h5>
                        <button type="button" class="close">&times;</button>
                    </div>
                    <div class="modal-body">
                        <div class="row">
                            <div class="form-group col-6">
                                <label for="Name">Name</label>
                                <input type="text" id="npcName" name="Name" value="" class="form-control">
                            </div>

                            <div class="form-group  col-6">
                                <label for="Race">Race</label>

                                <input type="text" id="npcRace" value="" name="Race" class="form-control">
                            </div>
                        </div>

                        <div class="form-group">
                            <label for="Class">Class</label>
                            <input type="text" id="npcClass" name="Class" value="" class="form-control">
                        </div>

                        <div class="form-group">
                            <label for="Relationship">Relationship</label>
                            <input type="text" id="npcRelationship" name="Relationship" value="" class="form-control">
                        </div>

                        <div class="form-group">
                            <label for="Background">Background</label>
                            <input type="text" id="npcBackground" name="Background" value="" class="form-control">
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" id="deleteNpc" class="btn btn-danger mr-5">Delete Npc</button>
                        <button type="button" class="btn btn-secondary" id="cancelNpc">Cancel</button>
                    @Html.AntiForgeryToken()
                        <button type="button" id="saveNpc" class="btn btn-primary">Save</button>
                    </div>
                </div>
            </div>
        </div>
    </div>


<style>
    .bs-example {
        margin: 20px;
    }
</style>

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>

<script type="text/javascript">
    var npcName = '';
    var npcRace = '';
    var npcClass = '';
    var npcRelationship = '';
    var npcBackground = '';

    $('#cancelNpc').click(function() {
        $('#npcModal').hide();
        window.location.reload();
    });

    $('.close').click(function() {
        $('#npcModal').hide();
        window.location.reload();
    });

    $('input[id="npcName"]').keyup(function() {
         npcName = $(this).val();
    });

    $('input[id="npcRace"]').keyup(function() {
         npcRace = $(this).val();
    });

     $('input[id="npcClass"]').keyup(function() {
         npcClass = $(this).val();
    });

    $('input[id="npcRelationship"]').keyup(function() {
        npcRelationship = $(this).val();
    });

     $('input[id="npcBackground"]').keyup(function() {
         npcBackground = $(this).val();
    });

    $('.editButton').click(function() {
     npcs = @Html.Raw(Json.Serialize(Model));

     const npcId = this.id;
     var selectedNpc = npcs.filter(function(el) {
         return el.id == npcId;
     });

     console.log(selectedNpc);

     $('input[id="npcName"]').val(selectedNote[0].npcName);
     $('input[id="npcRace"]').val(selectedNote[0].npcRace);
     $('input[id="npcClass"]').val(selectedNote[0].npcClass);
     $('input[id="npcRelationship"]').val(selectedNote[0].npcRelationship);
     $('input[id="npcBackground"]').val(selectedNote[0].npcBackground);

     $('#npcModal').modal('show');

     $('#saveNpc').click(function() {
       editSelectedNpc(npcId);
     });

      $('#deleteNpc').click(function() {
       deleteSelectedNpc(npcId);
     });

    });

    function editSelectedNpc(noteId) {
        var npcToEdit = {};

      npcToEdit.npcId = npcId;
      npcToEdit.npcName = npcName;
      npcToEdit.npcRace = npcRace;
      npcToEdit.npcClass = npcClass;
      npcToEdit.npcRelationship = npcRelationship;
      npcToEdit.npcBackground = npcBackground;
      

      $.ajax({
       contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
       dataType: 'json',
       type: 'PUT',
       url: window.location.href + '?handler=EditNpc',
       data: {editedNpc: npcToEdit },
       success: function() {
           window.location.href="url";
           console.log("ajax Notes post called");
       },
       failure: function(response) {
           console.log(response);
       },
       beforeSend: function (xhr) {
                     xhr.setRequestHeader("XSRF-TOKEN",
                     $('input:hidden[name="__RequestVerificationToken"]').val());
                    }
        });

       $('#noteModal').modal('hide');

      window.location.reload();
     
    }
    //////////////// TODO: Test edit and finish delete method
     function deleteSelectedNpc(npcId) {
      var npcToDelete = {};

      noteToDelete.id = noteId;
      noteToDelete.noteTitle = title;
      noteToDelete.noteDate = date;
      noteToDelete.noteContent = content;

      console.log("delete clicked: " + noteId);

      $.ajax({
       contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
       dataType: 'json',
       type: 'PUT',
       url: window.location.href + '?handler=DeleteNote',
       data: {noteToDelete: noteToDelete },
       success: function() {
           window.location.href="url";
           console.log("ajax Notes post called");
       },
       failure: function(response) {
           console.log(response);
       },
       beforeSend: function (xhr) {
                     xhr.setRequestHeader("XSRF-TOKEN",
                     $('input:hidden[name="__RequestVerificationToken"]').val());
                    }
        });

      $('#noteModal').modal('hide');

      window.location.reload();

     }

       function validateDate() {
              var dateInput = $('input[id="noteDate"]').val();

              var match = dateInput.match(/^(\d{1,2})\/(\d{1,2})\/(\d{4})$/);

              if (!match) {
                $('input[id="noteDate"]').val('');
              } else {
                $('input[id="noteDate"]').val(dateInput);
              }
      }


</script>